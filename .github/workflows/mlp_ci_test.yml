name: e2e_sft_mlp_q

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - feat/mlp_ci
  
  pull_request:
    branches:
      - main
      - v0.*
    paths:
      - "**/*.py"
      # Other entrypoints
      - "!examples/**"
      - "!tests/**"
      - "!verl/trainer/main_*.py"
      - "!verl/trainer/fsdp_sft_trainer.py"
      # Recipes
      - "!recipe/**"
      # Megatron
      - "!verl/workers/**/megatron_*.py"
      # Entrypoints
      - ".github/workflows/mlp_ci_test.yml"
      - "examples/data_preprocess/gsm8k.py"
      - "tests/e2e/sft"
      - "verl/trainer/fsdp_sft_trainer.py"
      - "verl/trainer/config/sft_trainer.yaml"

# Cancel jobs on the same ref if a new one is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

# Declare permissions just read content.
permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      runner-label: ${{ steps.create-runner.outputs.runner_label }}
      mlp-task-id: ${{ steps.create-runner.outputs.mlp_task_id }}
    steps:
      - name: setup runner
        id: create-runner
        run: |
           # 调用faas创建runner环境
           
           resp=$(curl -X POST "https://sd10g3clalm04ug7alq90.apigateway-cn-beijing.volceapi.com/runner/create" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"\
            -d '{"SourceBranch": "${{ github.head_ref }}","RepoName": "${{ github.event.pull_request.head.repo.full_name }}","RepoOwner":"${{ github.event.pull_request.head.repo.owner.login }}"}')
           echo $resp
           runner_label=$(echo $resp | jq -r '.runner_label')
           if [[ -z $runner_label ]]; then
             echo "set up runner failed"
             exit 1
           fi
           echo "runner_label=$runner_label" >> $GITHUB_OUTPUT   
           mlp_task_id=$(echo $resp | jq -r '.task_id')
           echo "mlp_task_id=$mlp_task_id" >> $GITHUB_OUTPUT 
  e2e_sft:
    needs: setup
    runs-on: ["${{ needs.setup.outputs.runner-label }}"]
    timeout-minutes: 20 # Increase this timeout value as needed
    env:
      HTTP_PROXY: ${{ secrets.PROXY_HTTP }}
      HTTPS_PROXY: ${{ secrets.PROXY_HTTPS }}
      NO_PROXY: "localhost,127.0.0.1,hf-mirror.com"
      HF_ENDPOINT: "https://hf-mirror.com"
      HF_HUB_ENABLE_HF_TRANSFER: "0" # This is more stable
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Install the current repository
        run: |
          pip3 install peft
          pip3 install --no-deps -e .[test,gpu]
      - name: Prepare gsm8k dataset
        run: |
          ray stop --force
          python3 examples/data_preprocess/gsm8k.py
      - name: Running GSM8K E2E training tests on 8 L20 GPUs with rmpad using function rm
        run: |
          ray stop --force
          bash tests/e2e/sft/run_sft.sh
      - name: Running GSM8K E2E training tests on 8 L20 GPUs w/o rmpad using function rm
        run: |
          ray stop --force
          RM_PAD=False bash tests/e2e/sft/run_sft.sh
      - name: Running GSM8K E2E training tests on 8 L20 GPUs with sequence parallism
        run: |
          ray stop --force
          SP_SIZE=2 bash tests/e2e/sft/run_sft.sh
      - name: Check loss difference between sequence parallel vs. default implementation
        run: |
          ray stop --force
          ENTRYPOINT="tests/e2e/sft/test_sp_loss_match.py" SP_SIZE=2 bash tests/e2e/sft/run_sft.sh
      - name: Running GSM8K E2E training tests on 8 L20 GPUs with sequence parallism and liger
        run: |
          ray stop --force
          SP_SIZE=2 LIGER=True bash tests/e2e/sft/run_sft.sh
      - name: Running GSM8K E2E training tests with LoRA
        run: |
          ray stop --force
          LORA_RANKevent=32 bash tests/e2e/sft/run_sft.sh
  cleanup: 
    runs-on: ubuntu-latest  
    needs: [e2e_sft, setup]        
    if: always()          
    steps:
      - name: remove runner
        run: |
           # 调用faas清理runner环境
           resp=$(curl -X POST "https://sd10g3clalm04ug7alq90.apigateway-cn-beijing.volceapi.com/runner/delete" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"\
            -d '{"TaskId": "${{ needs.setup.outputs.mlp-task-id }}"}')
           echo $resp